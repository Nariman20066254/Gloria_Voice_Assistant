import os
from random import randint
import script.commands as cm
import pygame
from datetime import datetime
import json  # –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏
import pyaudio  # –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏
from vosk import Model, KaldiRecognizer  # –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏
from silero_tts.silero_tts import SileroTTS
import g4f


# import RPi.GPIO as GPIO
# import alsaaudio

model = Model('model_small')
rec = KaldiRecognizer(model, 16000)
p = pyaudio.PyAudio()
stream = p.open(format=pyaudio.paInt16, channels=1, rate=16000, input=True, frames_per_buffer=8000)
stream.start_stream()


import tkinter as tk
from PIL import Image, ImageTk
import os
import threading
import time

# –ü—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
emotion_paths = {
    "happy":     "C:/Users/tanku/OneDrive/Desktop/asist/emotions/emotions/happy.png",
    "sad":       "C:/Users/tanku/OneDrive/Desktop/asist/emotions/emotions/sad.png",
    "angry":     "C:/Users/tanku/OneDrive/Desktop/asist/emotions/emotions/angry.png",
    "neutral":   "C:/Users/tanku/OneDrive/Desktop/asist/emotions/emotions/neutral.png",
    "surprised": "C:/Users/tanku/OneDrive/Desktop/asist/emotions/emotions/surprised.png",
    "fearful":   "C:/Users/tanku/OneDrive/Desktop/asist/emotions/emotions/fearful.png",
    "disgusted": "C:/Users/tanku/OneDrive/Desktop/asist/emotions/emotions/disgusted.png",
}

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ GUI
global_emotion_app = None

class EmotionApp:
    def __init__(self):
        self.root = tk.Tk()
        self.root.attributes('-fullscreen', True)
        self.root.configure(bg="black")
        self.screen_width = self.root.winfo_screenwidth()
        self.screen_height = self.root.winfo_screenheight()

        self.label = tk.Label(self.root, bg="black")
        self.label.pack(fill="both", expand=True)

        self.root.bind("<Escape>", lambda e: self.root.destroy())
        self.current_emotion = None

        # –ù–∞—á–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ
        self.update_emotion("neutral")

    def update_emotion(self, emotion_key):
        path = emotion_paths.get(emotion_key)
        if not path or not os.path.exists(path):
            print(f"‚ùå –≠–º–æ—Ü–∏—è '{emotion_key}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            return

        try:
            img = Image.open(path)
            img = img.resize((self.screen_width, self.screen_height), Image.Resampling.LANCZOS)
            photo = ImageTk.PhotoImage(img)
            self.label.config(image=photo)
            self.label.image = photo
            self.current_emotion = emotion_key
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")

    def run(self):
        self.root.mainloop()

# üîÑ –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –∏–∑ –ª—é–±–æ–π —Ç–æ—á–∫–∏ –∫–æ–¥–∞
def set_emotion(emotion_key):
    global global_emotion_app
    if global_emotion_app:
        global_emotion_app.update_emotion(emotion_key)
    else:
        print("‚ö†Ô∏è GUI –µ—â—ë –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")



def listen():
    """
    –§—É–Ω–∫—Ü–∏—è listen –¥–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Å–ª—É—à–∞—Ç—å –º–∏–∫—Ä–æ—Ñ–æ–Ω

    :return:
    """
    try:
        while True:
            data = stream.read(8000)
            if (rec.AcceptWaveform(data)) and (len(data) > 0):
                answer = json.loads(rec.Result())
                if answer['text']:
                    yield answer['text']
    except ImportError:
        print('–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ (listen)')


def play_music(file):
    """
    –§—É–Ω–∫—Ü–∏—è play_music –∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç—å –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã.
    :param file:
    :return:
    """
    try:
        pygame.mixer.init()
        pygame.mixer.music.load(file)
        pygame.mixer.music.play()
        while pygame.mixer.music.get_busy():
            continue
    except ImportError:
        print('–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏(play_music)')


def word_filter():
    """
    –§—É–Ω–∫—Ü–∏—è word_filter –¥–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å —Å–ª–æ–≤–∞, –∞ —Ç–∞–∫–∂–µ —É–º–µ–Ω—å—à–∞—Ç—å –∏–ª–∏ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å –∑–≤—É–∫.
    :return:
    """
    try:
        for text in listen():
            print(text)
            """
            if '—Å—Ç–æ' in text:
                mix.setvolume(100)  # 100
            if '–¥–µ–≤—è–Ω–æ—Å—Ç–æ' in text:
                mix.setvolume(90)  # 90
            if '–≤–æ—Å–µ–º—å–¥–µ—Å—è—Ç' in text:
                mix.setvolume(80)  # 80
            if '—Å–µ–º—å–¥–µ—Å—è—Ç' in text:
                mix.setvolume(70)  # 70
            if '—à–µ—Å—Ç—å–¥–µ—Å—è—Ç' in text:
                mix.setvolume(60)  # 60
            if '–ø—è—Ç—å–¥–µ—Å—è—Ç' in text:
                mix.setvolume(50)  # 50
            if '—Å–æ—Ä–æ–∫' in text:
                mix.setvolume(40)  # 40
            if '—Ç—Ä–∏–¥—Ü–∞—Ç—å' in text:
                mix.setvolume(30)  # 30
            if '–¥–≤–∞–¥—Ü–∞—Ç—å' in text:
                mix.setvolume(20)  # 20
            if '–¥–µ—Å—è—Ç—å' in text:
                mix.setvolume(10)  # 10
            if '–Ω–æ–ª—å' in text:
                mix.setvolume(0)  # 0
            """
            yield text
    except ImportError:
        print('–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏(world_filter)')


def haw_are_you():
    """
    –§—É–Ω–∫—Ü–∏—è haw_are_you –¥–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã "–∫–∞–∫ –¥–µ–ª–∞"
    –∞ —Ç–∞–∫–∂–µ —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ —É –Ω–µ–≥–æ –¥–µ–ª–∞.

    :return:
    """
    try:
        print('–ù–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏ haw_are_you')
        a = randint(0, 4)
        if a == a:
            # —Ö–æ—Ä–æ—à–æ, –∞ –∫–∞–∫ —É –≤–∞—Å
            play_music('speech synthesis/haw_are_you/—Ö–æ—Ä–æ—à–æ_–∞_–∫–∞–∫_—É_–≤–∞—Å.wav')
        elif a == 2:
            # –Ω–µ–ø–ª–æ—Ö–æ, –∫–∞–∫ —É –≤–∞—Å
            play_music('speech synthesis/haw_are_you/–Ω–µ–ø–ª–æ—Ö–æ_–∫–∞–∫ —É_–≤–∞—Å.wav')
        elif a == 3:
            pass
            # —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –¥–∞–µ—Ç —Å–±–æ–π –∫–∞–∫ –≥–æ–≤–æ—Ä–∏—Ç—Å—è –≥—É–¥, –∞ –∫–∞–∫ —É –≤–∞—Å
            play_music('speech synthesis/haw_are_you/—Å–∏—Å—Ç–µ–º–∞_–Ω–µ_–¥–∞–µ—Ç_—Å–±–æ–π_–∫–∞–∫_–≥–æ–≤–æ—Ä–∏—Ç—Å—è_–≥—É–¥,_–∞_–∫–∞–∫_—É_–≤–∞—Å.wav')
        elif a == 4:
            pass
            # –≤–ø–æ–ª–Ω–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –∫–∞–∫ —É –≤–∞—Å
        for text in word_filter():
            if text in cm.commands['–ø–ª–æ—Ö–æ–µ_–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ']:
                # —ç—Ç–æ –ø–µ—á–∞–ª—å–Ω–æ, –º–æ–∂–µ—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –Ω–∞ –Ω–æ–º–µ—Ä 150 —Ä–∞–±–æ—Ç–∞–µ—Ç 24 –Ω–∞ 7
                play_music('speech synthesis/haw_are_you/—ç—Ç–æ –ø–µ—á–∞–ª—å–Ω–æ, –º–æ–∂–µ—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –Ω–∞ –Ω–æ–º–µ—Ä 150 —Ä–∞–±–æ—Ç–∞–µ—Ç 24 –Ω–∞ '
                           '7.wav')
                break
            if text in cm.commands['—Ö–æ—Ä–æ—à–µ–µ_–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ']:
                # –∑–≤—É–∫ —Ä–∞–¥–æ—Å—Ç–∏
                play_music('speech synthesis/sounds/–∑–≤—É–∫_—Ä–∞–¥–æ—Å—Ç–∏.mp3')
                break
        main()
    except ImportError:
        print('–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏(haw_are_you)')


def about_the_robot():
    """

    :return:
    """
    try:
        print('–ù–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏ about_the_robot')
        # –Ø –ì–ª–æ—Ä–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä–æ–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–∞—à–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏ –≤—ã –º–æ–∂–µ—Ç–µ
        # –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å–æ –º–Ω–æ–π –∫–æ–≥–¥–∞ –≤–∞–º —Å–∫—É—á–Ω–æ, –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å —Å–∫–∞–∑–∫—É —Ä–µ–±–µ–Ω–∫—É, –∞ —Ç–∞–∫ –∂–µ –ø–æ–∏–≥—Ä–∞—Ç—å —Å –≤–∞—à–∏–º –¥–æ–º–∞—à–Ω–∏–º–∏
        # –∂–∏–≤–æ—Ç–Ω—ã–º–∏
        play_music('speech synthesis/about_the_robot/–Ø_–ì–ª–æ—Ä–∏—è_–≥–æ–ª–æ—Å–æ–≤–æ–π_–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç_–ø–æ–º–æ—â–Ω–∏–∫.wav')
        main()
    except ImportError:
        print('–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏(about_the_robot)')


def name():
    """

    :return:
    """
    try:
        print('–ù–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏ name')
        # –ì–ª–æ—Ä–∏—è
        play_music('speech synthesis/name/–Ø_–ì–ª–æ—Ä–∏—è.wav')
        # –ú–æ–≥—É –ª–∏ —è —á–µ–º —Ç–æ –≤–∞–º –ø–æ–º–æ—á—å
        play_music('speech synthesis/name/–ú–æ–≥—É_–ª–∏_—è_—á–µ–º_—Ç–æ_–≤–∞–º_–ø–æ–º–æ—á—å.wav')
        main()
    except ImportError:
        print('–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏(name)')


def fairy_tales():
    """

    :return:
    """
    try:
        print('–ù–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏ fairy_tales')
        # –í –º–æ–µ–º —Å–ø–∏—Å–∫–µ –µ—Å—Ç—å —Ç–∞–∫–∏–µ —Å–∫–∞–∑–∫–∏ –∫–∞–∫
        play_music('speech synthesis/fairy_tales/–í_–º–æ–µ–º_—Å–ø–∏—Å–∫–µ_–µ—Å—Ç—å_—Ç–∞–∫–∏–µ_—Å–∫–∞–∑–∫–∏_–∫–∞–∫.mp3')
        # –¢—Ä–∏ –ø–æ—Ä–æ—Å–µ–Ω–∫–∞
        play_music('speech synthesis/fairy_tales/–¢—Ä–∏_–ø–æ—Ä–æ—Å–µ–Ω–∫–∞.mp3')
        # –ö—É–∫—É—à–∫–∞
        play_music('speech synthesis/fairy_tales/–ö—É–∫—É—à–∫–∞.mp3')
        # –ö–∞–∫—É—é —Å–∫–∞–∑–∫—É —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ—Å–ª—É—à–∞—Ç—å ?
        play_music('speech synthesis/fairy_tales/–ö–∞–∫—É—é_—Å–∫–∞–∑–∫—É_—Ö–æ—Ç–∏—Ç–µ_–ø—Ä–æ—Å–ª—É—à–∞—Ç—å-.mp3')
        play_music('speech synthesis/sounds/blik.mp3')
        for tex in word_filter():
            if '—Ç—Ä–∏ –ø–æ—Ä–æ—Å—ë–Ω–∫–∞' in tex:
                fairy('—Ç—Ä–∏ –ø–æ—Ä–æ—Å–µ–Ω–∫–∞')
            elif '–∫—É–∫—É—à–∫–∞' in tex:
                fairy('—Ç—Ä–∏ –ø–æ—Ä–æ—Å–µ–Ω–∫–∞')
    except ImportError:
        print('–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏(fairy_tales)')


def fairy(text_far):
    if text_far == '—Ç—Ä–∏ –ø–æ—Ä–æ—Å–µ–Ω–∫–∞':
        play_music('speech synthesis/fairy_tales/–ß—Ç–æ–± –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ø–∞—É–∑—É —Å–∫–∞–∂–∏—Ç–µ –ü–∞—É–∑–∞, –ß—Ç–æ–± –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ '
                   '—Å–∫–∞–∂–∏—Ç–µ –ü–ª–µ–π, –ß—Ç–æ–± –ø—Ä–µ—Ä–≤–∞—Ç—å.mp3')
        pygame.mixer.music.load('Audio_fairy_tales/tri-porosenka.mp3')
        pygame.mixer.music.play()
        while True:
            data = stream.read(8000)
            if (rec.AcceptWaveform(data)) and (len(data) > 0):
                answer = json.loads(rec.Result())
                if answer['text']:
                    if answer['text'] in cm.commands['pause']:
                        pygame.mixer.music.pause()
                    elif answer['text'] in cm.commands['–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ']:
                        pygame.mixer.music.unpause()
                    elif answer['text'] in cm.commands['stop']:
                        pygame.mixer.music.stop()
                        main()

    elif text_far == '–∫—É–∫—É—à–∫–∞':
        play_music('speech synthesis/fairy_tales/–ß—Ç–æ–± –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ø–∞—É–∑—É —Å–∫–∞–∂–∏—Ç–µ –ü–∞—É–∑–∞, –ß—Ç–æ–± –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ '
                   '—Å–∫–∞–∂–∏—Ç–µ –ü–ª–µ–π, –ß—Ç–æ–± –ø—Ä–µ—Ä–≤–∞—Ç—å.mp3')
        play_music('Audio_fairy_tales/–∫—É–∫—É—à–∫–∞.mp3')
        pygame.mixer.music.play()
        while True:
            data = stream.read(8000)
            if (rec.AcceptWaveform(data)) and (len(data) > 0):
                answer = json.loads(rec.Result())
                if answer['text']:
                    if answer['text'] in cm.commands['pause']:
                        pygame.mixer.music.pause()
                    elif answer['text'] in cm.commands['–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ']:
                        pygame.mixer.music.unpause()
                    elif answer['text'] in cm.commands['stop']:
                        pygame.mixer.music.stop()
                        main()


def time_data():
    """

    :return:
    """
    print('–Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏ (time_data)')
    play_music('speech synthesis/data_time/–í_–¥–∞–Ω–Ω—ã–π_–º–æ–º–µ–Ω—Ç.mp3')

    # –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç
    try:
        dat = datetime.now()
        if dat.hour == 1:
            play_music('speech synthesis/data_time/1.mp3')
        elif dat.hour == 2:
            play_music('speech synthesis/data_time/2.mp3')
        elif dat.hour == 3:
            play_music('speech synthesis/data_time/3.mp3')
        elif dat.hour == 4:
            play_music('speech synthesis/data_time/4.mp3')
        elif dat.hour == 5:
            play_music('speech synthesis/data_time/5.mp3')
        elif dat.hour == 6:
            play_music('speech synthesis/data_time/6.mp3')
        elif dat.hour == 7:
            play_music('speech synthesis/data_time/7.mp3')
        elif dat.hour == 8:
            play_music('speech synthesis/data_time/8.mp3')
        elif dat.hour == 9:
            play_music('speech synthesis/data_time/9.mp3')
        elif dat.hour == 10:
            play_music('speech synthesis/data_time/10.mp3')
        elif dat.hour == 11:
            play_music('speech synthesis/data_time/11.mp3')
        elif dat.hour == 12:
            play_music('speech synthesis/data_time/12.mp3')
        elif dat.hour == 13:
            play_music('speech synthesis/data_time/13.mp3')
        elif dat.hour == 14:
            play_music('speech synthesis/data_time/14.mp3')
        elif dat.hour == 15:
            play_music('speech synthesis/data_time/15.mp3')
        elif dat.hour == 16:
            play_music('speech synthesis/data_time/16.mp3')
        elif dat.hour == 17:
            play_music('speech synthesis/data_time/17.mp3')
        elif dat.hour == 18:
            play_music('speech synthesis/data_time/18.mp3')
        elif dat.hour == 19:
            play_music('speech synthesis/data_time/19.mp3')
        elif dat.hour == 20:
            play_music('speech synthesis/data_time/20.mp3')
        elif dat.hour == 21:
            play_music('speech synthesis/data_time/21.mp3')
        elif dat.hour == 22:
            play_music('speech synthesis/data_time/22.mp3')
        elif dat.hour == 23:
            play_music('speech synthesis/data_time/23.mp3')
        elif dat.hour == 24:
            play_music('speech synthesis/data_time/24.mp3')
        main()
    except ImportError:
        print('–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ (time_data)')

def time_of_day(text):
    """

    :param text:
    :return:
    """
    try:
        current_datetime = datetime.now()
        dat = current_datetime.hour
        if '–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ' in text:
            if 5 < dat < 12:
                # –¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ
                play_music('speech synthesis/wake_up_team/–î–æ–±—Ä–æ–µ_—É—Ç—Ä–æ.wav')
            if 12 < dat < 15:
                # –¥–æ–±—Ä—ã–π –¥–µ–Ω—å
                play_music('speech synthesis/wake_up_team/–î–æ–±—Ä—ã–π-–¥–µ–Ω—å.wav')
            if 15 < dat < 18:
                # –¥–æ–±—Ä—ã–π –¥–µ–Ω—å
                play_music('speech synthesis/wake_up_team/–î–æ–±—Ä—ã–π-–¥–µ–Ω—å.wav')
            if 18 < dat:
                # –¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä
                play_music('speech synthesis/wake_up_team/–î–æ–±—Ä—ã–π-–≤–µ—á–µ—Ä.wav')
            if dat == 0 or dat <= 5:
                # –¥–æ–±—Ä–æ–π –Ω–æ—á–∏
                play_music('speech synthesis/wake_up_team/–î–æ–±—Ä–æ–π-–Ω–æ—á–∏.wav')
        elif '–¥–æ–±—Ä—ã–π –¥–µ–Ω—å' in text:
            if 5 < dat < 12:
                # –¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ
                play_music('speech synthesis/wake_up_team/–î–æ–±—Ä–æ–µ_—É—Ç—Ä–æ.wav')
            if 12 < dat < 15:
                # –¥–æ–±—Ä—ã–π –¥–µ–Ω—å
                play_music('speech synthesis/wake_up_team/–î–æ–±—Ä—ã–π-–¥–µ–Ω—å.wav')
            if 15 < dat < 18:
                # –¥–æ–±—Ä—ã–π –¥–µ–Ω—å
                play_music('speech synthesis/wake_up_team/–î–æ–±—Ä—ã–π-–¥–µ–Ω—å.wav')
            if 18 < dat:
                # –¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä
                play_music('speech synthesis/wake_up_team/–î–æ–±—Ä—ã–π-–≤–µ—á–µ—Ä.wav')
            if dat == 0 or dat <= 5:
                # –¥–æ–±—Ä–æ–π –Ω–æ—á–∏
                play_music('speech synthesis/wake_up_team/–î–æ–±—Ä–æ–π-–Ω–æ—á–∏.wav')
        elif '–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä' in text:
            if 5 < dat < 12:
                # –¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ
                play_music('speech synthesis/wake_up_team/–î–æ–±—Ä–æ–µ_—É—Ç—Ä–æ.wav')
            if 12 < dat < 15:
                # –¥–æ–±—Ä—ã–π –¥–µ–Ω—å
                play_music('speech synthesis/wake_up_team/–î–æ–±—Ä—ã–π-–¥–µ–Ω—å.wav')
            if 15 < dat < 18:
                # –¥–æ–±—Ä—ã–π –¥–µ–Ω—å
                play_music('speech synthesis/wake_up_team/–î–æ–±—Ä—ã–π-–¥–µ–Ω—å.wav')
            if 18 < dat:
                # –¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä
                play_music('speech synthesis/wake_up_team/–î–æ–±—Ä—ã–π-–≤–µ—á–µ—Ä.wav')
            if dat == 0 or dat <= 5:
                # –¥–æ–±—Ä–æ–π –Ω–æ—á–∏
                play_music('speech synthesis/wake_up_team/–î–æ–±—Ä–æ–π-–Ω–æ—á–∏.wav')
        elif '–¥–æ–±—Ä–æ–π –Ω–æ—á–∏' in text:
            if 5 < dat < 12:
                # –¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ
                play_music('speech synthesis/wake_up_team/–î–æ–±—Ä–æ–µ_—É—Ç—Ä–æ.wav')
            if 12 < dat < 15:
                # –¥–æ–±—Ä—ã–π –¥–µ–Ω—å
                play_music('speech synthesis/wake_up_team/–î–æ–±—Ä—ã–π-–¥–µ–Ω—å.wav')
            if 15 < dat < 18:
                # –¥–æ–±—Ä—ã–π –¥–µ–Ω—å
                play_music('speech synthesis/wake_up_team/–î–æ–±—Ä—ã–π-–¥–µ–Ω—å.wav')
            if 18 < dat:
                # –¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä
                play_music('speech synthesis/wake_up_team/–î–æ–±—Ä—ã–π-–≤–µ—á–µ—Ä.wav')
            if dat == 0 or dat <= 5:
                # –¥–æ–±—Ä–æ–π –Ω–æ—á–∏
                play_music('speech synthesis/wake_up_team/–î–æ–±—Ä–æ–π-–Ω–æ—á–∏.wav')
        main()
    except ImportError:
        print('–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏(time_of_day)')


def muc(file_name):
    """
    –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç –∞—É–¥–∏–æ—Ñ–∞–π–ª –∏ —É–¥–∞–ª—è–µ—Ç –µ–≥–æ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.
    """
    try:
        pygame.mixer.init()
        pygame.mixer.music.load(file_name)
        pygame.mixer.music.play()
        while pygame.mixer.music.get_busy():
            pygame.time.Clock().tick(10)  # —É–º–µ–Ω—å—à–∞–µ—Ç –Ω–∞–≥—Ä—É–∑–∫—É –Ω–∞ CPU

        pygame.mixer.music.stop()        # ‚õî –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
        pygame.mixer.quit()              # üßπ –û—Å–≤–æ–±–æ–¥–∏—Ç—å —Ä–µ—Å—É—Ä—Å

        os.remove(file_name)             # ‚úÖ –£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ –≤—ã–≥—Ä—É–∑–∫–∏
    except Exception as e:
        print(f'–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ play_music: {e}')

def say(text):
    name_waw = 'output.wav' 
    tts = SileroTTS(
    language='ru',
    model_id='v4_ru',
    speaker='baya'  # üëà –¥–æ–ø—É—Å—Ç–∏–º—ã–π –≥–æ–ª–æ—Å
    )
    tts.tts(text, f'waw/{name_waw}')
    print(f"{text}‚úÖ")
    muc(f'waw/{name_waw}')



def vopros():
    print('–Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏ vopros')
    say('–°–ª—É—à–∞—è—é –≤–∞—Å, –ö–∞–∫–æ–π –≤–æ–ø—Ä–æ—Å—Å —Ö–æ—Ç–∏—Ç–µ –∑–∞–¥–∞—Ç—å?')
    while True:
        data = stream.read(8000)
        if (rec.AcceptWaveform(data)) and (len(data) > 0):
            answer = json.loads(rec.Result())
            if answer['text'] == '–≤—ã—Ö–æ–¥':
                main()
            elif answer['text']:
                print(answer['text'])
                a = answer['text']
                print('–¥—É–º–∞–µ—Ç....')
                response = g4f.ChatCompletion.create(
                model="gpt-4o-mini",
                messages=[{"role": "user", "content": f"{a}"}])
                print(response)
                print('–∑–∞–∫–æ–Ω—á–∏–ª–∞ –¥—É–º–∞—Ç—å')
                say(response)
                main()

def em():
    play_music('em/–í –º–æ–µ–º —Å–ø–∏—Å–∫–µ –µ—Å—Ç—å.wav')

    set_emotion('happy')
    play_music('em/–†–∞–¥–æ—Å—Ç—å .wav')
    time.sleep(2)

    set_emotion('sad')
    play_music('em\–ì—Ä—É—Å—Ç—å.wav')
    time.sleep(2)

    set_emotion('angry')
    play_music('em\–ó–ª–æ—Å—Ç—å.wav')
    time.sleep(2)

    set_emotion('neutral')
    play_music('em\–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –ª–∏—Ü–æ.wav')
    time.sleep(2)


    set_emotion('surprised')
    play_music('em\–£–¥–∏–≤–ª–µ–Ω–∏–µ.wav')
    time.sleep(2)


    set_emotion('fearful')
    play_music('em\–°—Ç—Ä–∞—Ö.wav')
    time.sleep(2)


    set_emotion('disgusted')
    play_music('em\–û—Ç–≤—Ä–∞—â–µ–Ω–∏–µ.wav')
    time.sleep(2)
    main()

def main():
    """

    :return:
    """
    # —á–µ–º –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–∞
    try:
        set_emotion('neutral')
        play_music('speech synthesis/sounds/blik.mp3')
        print('–ù–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏ main')
        for text in word_filter():
            if text in cm.commands['–∫–∞–∫ —Ç–µ–±—è –∑–≤–∞—Ç—å']:
                set_emotion('happy')
                name()
            elif text in cm.commands['–∫–∞–∫ –¥–µ–ª–∞']:
                haw_are_you()
            elif text in cm.commands['–æ –±–æ—Ç–µ']:
                about_the_robot()
            elif text in cm.commands['—Å–∫–∞–∑–∫–∞']:
                fairy_tales()
            elif text in cm.commands['–≤—Ä–µ–º—è']:
                time_data()
            elif text in cm.commands['–≤–∫–ª—é—á–∏_–º—É–∑—ã–∫—É']:
                music()
            elif text in cm.commands['–≤–æ–ø—Ä–æ—Å']:
                vopros()
            elif text == '—ç–º–æ—Ü–∏–∏':
                em()
            """else:
                # –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª–∞ –≤–∞—Å –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å
                play_music('speech synthesis/main/–ù–µ_—Å–æ–≤—Å–µ–º_–ø–æ–Ω—è–ª–∞_–≤–∞—Å_–ø–æ–≤—Ç–æ—Ä–∏—Ç–µ_–≤–æ–ø—Ä–æ—Å_–ø–æ–∂–∞–ª—É–π—Å—Ç–∞.wav')
                main()"""
    except ImportError:
        print('–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏(main)')

def music():
    print('–Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏(music)')
    q = 0
    files = ['5000-mp3.mp3', 'Alper_Eƒüri_Keep_Calm_Tiktok_Remix_UXuvQFD4Tjc_140.mp3', 'doc.mp3', 'Gasolina _rmx.mp3',
             'Gidayyat_HOVANNII_-_Sombrero_(musmore.com).mp3', 'Instasamka - Moneyken Love [BADAYTOFF TIKTOK EDIT].mp3',
             'Jengi - Bel mercy TikTok remix.mp3', 'lambada_bez_mata_-_lambada_bez_mata_(z2.fm).mp3',
             'marshmello-alone.mp3', 'Mi Gente.mp3', 'Mishlawi - All Night.mp3', 'Miyagi & Andy Panda - –¢–∞–º–∞–¥–∞.mp3',
             'Move_Your_Body_.mp3', 'RaiM-Dvigatsya_Mikis_Remix__(mp3lav.com).mp3', 'Rozovoe_vino.mp3',
             'Skriptonit_-_Baby_Mama_Bez_mata_(Vuxo7.com).mp3', 'Smack That.mp3',
             'stromae-alors-on-danse-dubdogz-remix.mp3', 'timmy-turner.mp3', 'Toca Toca  T-Pain Low (DJ DIMVSH ).mp3',
             'Traag.mp3', 'Tyga & –ê–∑–∏—è—Ç—Å–∫–∞—è –≠—Å—Ç–µ—Ç–∏–∫–∞.mp3', '…¢·¥á·¥õ ·¥Ö·¥è·¥°…¥.mp3', '–ì–∞–Ω–≤–µ—Å—Ç - –ù–∞ –†–∞—Ö–∞—Ç–µ.mp3',
             '–¥–∏—Å–∫–æ—Ç–µ–∫–∞ –∏–∑ 90.mp3', '–ö–ª—É–±–Ω—è–∫ _ ·¥ç…™x.mp3', '–ª–µ–∑–≥–∏–Ω–∫–∞.mp3', '–º–∞–¥–∏–Ω–∞.mp3', '–º–µ–¥–ª—è–∫.mp3',
             '–ú–∏—Å—Ç–µ—Ä 718 ‚Äì –°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç.mp3', '–ù–µ –∞–Ω–≥–∏–º–µ_ ( –±–µ–∑ –º–∞—Ç–∞ ) (320 kbps).mp3', '–ø—É—Å—Ç–∏—Ç–µ –º–µ–Ω—è –Ω–∞ —Ç–∞–Ω—Å–ø–æ–ª.mp3',
             '–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç ft. 104, T-Fest - –ú—É–ª—å—Ç–∏–±—Ä–µ–Ω–¥–æ–≤—ã–π (Clean) (320 kbps).mp3',
             '–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç_–¢–∞–Ω—Ü—É–π_—Å–∞–º–∞_izzamuzzic.mp3',
             '–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç_—Ö_–®–ò–ö_–ü–∞—Ü–∞–Ω_—Ö_–ö–µ—Ç—Ç–∏–∫_Badaytoff_&_Daula_Partybreak_19.mp3']
    print(f'—Å–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç:{files[0]}')
    pygame.mixer.music.load(f'speech synthesis/–º—É–∑—ã–∫–∞/{files[0]}')
    pygame.mixer.music.play()
    while True:
        data = stream.read(8000)
        if (rec.AcceptWaveform(data)) and (len(data) > 0):
            answer = json.loads(rec.Result())
            if answer['text']:
                print(answer['text'])
                if answer['text'] == '–¥–∞–ª—å—à–µ':
                    q = q + 1
                    print(f'{q} and {len(files)}')
                    if len(files) == q:
                        q = -1
                    else:
                        pygame.mixer.music.unload()
                        pygame.mixer.music.load(f'speech synthesis/–º—É–∑—ã–∫–∞/{files[q]}')
                        pygame.mixer.music.play()
                        print(f'—Å–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç:{files[q]}')
                elif answer['text'] in cm.commands['pause']:
                    pygame.mixer.music.pause()
                elif answer['text'] in cm.commands['–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ']:
                    pygame.mixer.music.unpause()
                elif answer['text'] in cm.commands['stop']:
                    pygame.mixer.music.stop()
                    main()
                if '—Å—Ç–æ' in answer['text']:
                    pygame.mixer.music.set_volume(1.0)  # 100
                if '–¥–µ–≤—è–Ω–æ—Å—Ç–æ' in answer['text']:
                    pygame.mixer.music.set_volume(0.9)  # 90
                if '–≤–æ—Å–µ–º—å–¥–µ—Å—è—Ç' in answer['text']:
                    pygame.mixer.music.set_volume(0.8)  # 80
                if '—Å–µ–º—å–¥–µ—Å—è—Ç' in answer['text']:
                    pygame.mixer.music.set_volume(0.7)  # 70
                if '—à–µ—Å—Ç—å–¥–µ—Å—è—Ç' in answer['text']:
                    pygame.mixer.music.set_volume(0.6)  # 60
                if '–ø—è—Ç—å–¥–µ—Å—è—Ç' in answer['text']:
                    pygame.mixer.music.set_volume(0.5)  # 50
                if '—Å–æ—Ä–æ–∫' in answer['text']:
                    pygame.mixer.music.set_volume(0.4)  # 40
                if '—Ç—Ä–∏–¥—Ü–∞—Ç—å' in answer['text']:
                    pygame.mixer.music.set_volume(0.3)  # 30
                if '–¥–≤–∞–¥—Ü–∞—Ç—å' in answer['text']:
                    pygame.mixer.music.set_volume(0.2)  # 20
                if '–¥–µ—Å—è—Ç—å' in answer['text']:
                    pygame.mixer.music.set_volume(0.1)  # 10
                if '–Ω–æ–ª—å' in answer['text']:
                    pygame.mixer.music.set_volume(0.0)  # 0


def wake_up_team():
    """

    :return:
    """
    try:
        set_emotion('neutral')
        print('–ù–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏ ware_up_team')
        play_music('speech synthesis/sounds/blik.mp3')
        for text in word_filter():
            if '–ø—Ä–∏–≤–µ—Ç' in text:
                # –ø—Ä–∏–≤–µ—Ç
                play_music('speech synthesis/wake_up_team/–ü—Ä–∏–≤–µ—Ç.wav')
                break
            if '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ' in text or '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π' in text:
                # –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ
                play_music('speech synthesis/wake_up_team/–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ.wav')
                break
            if '–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ' in text:
                print(123)
                time_of_day(text)
            if '–¥–æ–±—Ä—ã–π –¥–µ–Ω—å' in text:
                time_of_day(text)
            if '–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä' in text:
                time_of_day(text)
            if '–¥–æ–±—Ä–æ–π –Ω–æ—á–∏' in text:
                time_of_day(text)
            if '—Å–∞–ª—é—Ç' in text:
                # —Å–∞–ª—é—Ç
                play_music('speech synthesis/wake_up_team/–°–∞–ª—é—Ç.wav')
                break
            if '—Ö–∞–π' in text:
                # —Ö–∞–π
                play_music('speech synthesis/wake_up_team/–•–∞–π_1.wav')
                break
            if '–≥–ª–æ—Ä–∏—è' in text:
                # –°–ª—É—à–∞—é
                play_music('speech synthesis/wake_up_team/–°–ª—É—à–∞—é_1.wav')
                break
            else:
                wake_up_team()
            play_music('speech synthesis/main/—á–µ–º_–º–æ–≥—É_–±—ã—Ç—å_–ø–æ–ª–µ–∑–Ω–∞.wav')
        main()
    except ImportError:
        print('–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏(wake_up_time)')


if __name__ == '__main__':
    global_emotion_app = EmotionApp()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ª–æ–≥–∏–∫—É –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤ —Ñ–æ–Ω–µ
    threading.Thread(target=main, daemon=True).start()

    # –ó–∞–ø—É—Å–∫–∞–µ–º GUI –≤ –≥–ª–∞–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    global_emotion_app.run()

