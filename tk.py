import tkinter as tk
from PIL import Image, ImageTk
import os
import threading
import time

# –ü—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
emotion_paths = {
    "happy":     "C:/Users/tanku/OneDrive/Desktop/asist/emotions/emotions/happy.png",
    "sad":       "C:/Users/tanku/OneDrive/Desktop/asist/emotions/emotions/sad.png",
    "angry":     "C:/Users/tanku/OneDrive/Desktop/asist/emotions/emotions/angry.png",
    "neutral":   "C:/Users/tanku/OneDrive/Desktop/asist/emotions/emotions/neutral.png",
    "surprised": "C:/Users/tanku/OneDrive/Desktop/asist/emotions/emotions/surprised.png",
    "fearful":   "C:/Users/tanku/OneDrive/Desktop/asist/emotions/emotions/fearful.png",
    "disgusted": "C:/Users/tanku/OneDrive/Desktop/asist/emotions/emotions/disgusted.png",
}

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ GUI
global_emotion_app = None

class EmotionApp:
    def __init__(self):
        self.root = tk.Tk()
        self.root.attributes('-fullscreen', True)
        self.root.configure(bg="black")
        self.screen_width = self.root.winfo_screenwidth()
        self.screen_height = self.root.winfo_screenheight()

        self.label = tk.Label(self.root, bg="black")
        self.label.pack(fill="both", expand=True)

        self.root.bind("<Escape>", lambda e: self.root.destroy())
        self.current_emotion = None

        # –ù–∞—á–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ
        self.update_emotion("neutral")

    def update_emotion(self, emotion_key):
        path = emotion_paths.get(emotion_key)
        if not path or not os.path.exists(path):
            print(f"‚ùå –≠–º–æ—Ü–∏—è '{emotion_key}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            return

        try:
            img = Image.open(path)
            img = img.resize((self.screen_width, self.screen_height), Image.Resampling.LANCZOS)
            photo = ImageTk.PhotoImage(img)
            self.label.config(image=photo)
            self.label.image = photo
            self.current_emotion = emotion_key
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")

    def run(self):
        self.root.mainloop()

# üîÑ –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –∏–∑ –ª—é–±–æ–π —Ç–æ—á–∫–∏ –∫–æ–¥–∞
def set_emotion(emotion_key):
    global global_emotion_app
    if global_emotion_app:
        global_emotion_app.update_emotion(emotion_key)
    else:
        print("‚ö†Ô∏è GUI –µ—â—ë –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")


# ‚è± –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ‚Äî –º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –≥–¥–µ —É–≥–æ–¥–Ω–æ
def test():
    time.sleep(2)
    set_emotion("happy")
    time.sleep(2)
    set_emotion("sad")
    time.sleep(2)
    set_emotion("surprised")

# üîÅ –ü—Ä–∏–º–µ—Ä –≤—ã–∑–æ–≤–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
threading.Thread(target=test).start()
